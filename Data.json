{
    course: [
        {
    rating: {
    ratingSum: 45.5,
    timesUpdated: 11,
    ratingFinal: 4.136363636363637
            },
    bookmark: [
                "63be5965b09faa004ad70d7f"
            ],
    courseCompleted: [],
    _id: "63a862608be5450043f426fc",
    title: "Complete C++ Placement DSA Course",
    category: "Web Development",
    imageurl: "https://res.cloudinary.com/dzwzxzmw0/image/upload/v1671979615/e-Learning/Sun_Dec_25_2022-Complete_DSA_C_Course_wgs175.jpg",
    zipurl: "images/Sun Dec 25 2022-themeforest-tPaj15ej-newspaper-wordpress-theme.zip",
    name: "ShoutMeBack",
    willLearn: "<ol><li>Learn various Popular Data Structures and their Algorithms.</li><li>Develop your Analytical skills in Data Structure and use them efficiently.</li><li>Learn Recursive Algorithms on Data Structures</li><li>Learn about various Sorting Algorithms</li><li>Implementation of Data Structures using C and C++</li></ol>",
    discription: "Learn, Analyse and Implement Data Structure using C and C++. Learn Recursion and Sorting.",
    discriptionLong: "<p>Welcome to Data Structures & Algorithms, Level up Course the only course that provides you an ultimate practice on problem solving process and helping you to take your data structures & algorithms to the next level.  The course is taught by an expert instructor Prateek Narang from Google, who is not just a software engineer but also has mentored thousands of students in becoming great programmers & developers.</p><p>Course exercises are in C++ but programmers having experience in one or more languages (C++/Java/Python/JavaScript) can definitely do this course, provided they have fundamental understanding of data structures. The course covers both breadth & depth of topics, diving deep where-ever needed. You will also learn how to apply techniques involving like - sorting & searching algorithms, sliding window, binary search, hashing which are very important for problem solving. For advanced topics like Dynamic Programming & Graphs, the course starts from the basics & helps you master these topics from the very fundamentals. Unlike most instructors, I am not a salesperson or a marketer. My job is to help you build strong fundamentals in programming & be  a successful developer. Through Udemy, I am providing this course to you at a fraction of cost of its original cost, so that anyone who is interested to learn can take their skills to the next level. So I hope you sign up today, and I will see you in the course.</p>
    The Course contains 25+ hours of interactive video content & dozens of coding exercises, teaching you the right tips & tricks in problem solving in a most concise way. Every problem discussion starts with a brute force approach, optimisations and ends with hands-on-coding video in C++ as well.",
    requirement: "<ul><li>Previous knowledge of Programming in C and C++</li></ul>",
    creator: "62c73468dae9ed0004954f4f",
    YoutubeVideo: "PLDzeHZWIZsTryvtXdMr6rPh4IDexB5NIA",
    Duration: "96:28:50",
    videoContent: [
                {
    usersWatched: [
                        "62b053b3a2980300048998f7"
                    ],
    _id: "63a862628be5450043f426fd",
    videotitle: "Lecture 1: Intro to Programming & Flowcharts",
    videoUrl: "https://www.youtube.com/watch?v=WQoB2z67hvY"
                },
                {
    usersWatched: [
                        "62b053b3a2980300048998f7"
                    ],
    _id: "63a862628be5450043f426fe",
    videotitle: "Lecture 2: Write Your First Program in C++",
    videoUrl: "https://www.youtube.com/watch?v=t6zLJOCVqD0"
                },
                {
    usersWatched: [
                        "62b053b3a2980300048998f7"
                    ],
    _id: "63a862628be5450043f426ff",
    videotitle: "Lecture 3: If-Else, While loop & Lots of Patterns (Part-1)",
    videoUrl: "https://www.youtube.com/watch?v=WR31ByTzAVQ"
                },
                {
    usersWatched: [
                        "62b053b3a2980300048998f7"
                    ],
    _id: "63a862628be5450043f42700",
    videotitle: "Lecture 4: Solving Pattern Questions (Part-2)",
    videoUrl: "https://www.youtube.com/watch?v=dr-pLeJBr38"
                },
                {
    usersWatched: [
                        "62b053b3a2980300048998f7"
                    ],
    _id: "63a862628be5450043f42701",
    videotitle: "Lecture 5: Bitwise Operators, For Loops, Operator Precedence & Variable Scoping",
    videoUrl: "https://www.youtube.com/watch?v=yjdQHb2elqI"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42702",
    videotitle: "Lecture 6: Binary & Decimal Number System",
    videoUrl: "https://www.youtube.com/watch?v=bWrsk0QizEk"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42703",
    videotitle: "Lecture 7: LeetCode Problem Solving Session",
    videoUrl: "https://www.youtube.com/watch?v=0fwrMYPcGQ0"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42704",
    videotitle: "Lecture 8: Switch Statement & Functions",
    videoUrl: "https://www.youtube.com/watch?v=8nNqk2NPbRA"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42705",
    videotitle: "Lecture 9: Introduction to Arrays in C++",
    videoUrl: "https://www.youtube.com/watch?v=sNrLlmOIn-c"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42706",
    videotitle: "Lecture 10: Solving LeetCode/CodeStudio Questions [Arrays]",
    videoUrl: "https://www.youtube.com/watch?v=oVa8DfUDKTw"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42707",
    videotitle: "Lecture 11:Time & Space Complexity || How to avoid Time Limit Exceeded [TLE]",
    videoUrl: "https://www.youtube.com/watch?v=QovOdd80A4s"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42708",
    videotitle: "Lecture 12: Binary Search Explained in 1 Video [Theory + Code]",
    videoUrl: "https://www.youtube.com/watch?v=YJeoQBevNVo"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42709",
    videotitle: "Lecture 13: Binary Search Interview Questions [Google, Amazon, Microsoft] || ProblemSet - 1",
    videoUrl: "https://www.youtube.com/watch?v=zD2Jg3alZV8"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4270a",
    videotitle: "Lecture14: Binary Search Interview Questions [Google, Amazon, Microsoft] || ProblemSet - 2",
    videoUrl: "https://www.youtube.com/watch?v=6z2HK4o8qcU"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4270b",
    videotitle: "Lecture 15: Book Allocation Problem || Aggressive Cows Problem || Binary Search Advanced Problems",
    videoUrl: "https://www.youtube.com/watch?v=YTTdLgyqOLY"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4270c",
    videotitle: "Lecture16: Selection Sort [Theory + Code] || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=UdO2NeHB46c"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4270d",
    videotitle: "CodeHelp Weekly Contest 1 is LIVE || Game starts Now",
    videoUrl: "https://www.youtube.com/watch?v=vpltlIwq9OY"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4270e",
    videotitle: "Lecture 17: BUBBLE SORT in 1 Video [Theory + Optimised Code] || Best/Worst Case Complexity",
    videoUrl: "https://www.youtube.com/watch?v=zOhUavxlzw4"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4270f",
    videotitle: "Lecture 18: INSERTION SORT in 1 Video [Theory + Code] || Best/Worst Case Complexity",
    videoUrl: "https://www.youtube.com/watch?v=7kIVfVY6Axk"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42710",
    videotitle: "Lecture19: C++ STL in 1 Video (Re-Uploaded)",
    videoUrl: "https://www.youtube.com/watch?v=WgMPrLX-zsA"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42711",
    videotitle: "Lecture 20: Solving LeetCode/CodeStudio Questions [Arrays]",
    videoUrl: "https://www.youtube.com/watch?v=MPvr-LmaZmA"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42712",
    videotitle: "Lecture21: Solving LeetCode/CodeStudio Questions [Arrays]",
    videoUrl: "https://www.youtube.com/watch?v=Z7_nMTHROZo"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42713",
    videotitle: "CodeHelp Weekly Contest 2 is LIVE || Contest 1 Results announced",
    videoUrl: "https://www.youtube.com/watch?v=HL9WcjdEqmI"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42714",
    videotitle: "Lecture22: All about Char Arrays, Strings & solving LeetCode Questions",
    videoUrl: "https://www.youtube.com/watch?v=Wdjr6uoZ0e0"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42715",
    videotitle: "Lecture 23: Introduction to 2D Arrays in C++ || LeetCode Questions",
    videoUrl: "https://www.youtube.com/watch?v=1CdolnvxLs0"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42716",
    videotitle: "Lecture 24: Basic Maths for DSA || Sieve || Modular Arithmetics || Euclidâ€™s Algorithm",
    videoUrl: "https://www.youtube.com/watch?v=KdePjukNs98"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42717",
    videotitle: "DSA Placement course || Phase-1 Completed",
    videoUrl: "https://www.youtube.com/watch?v=ac7ii_XfoRI"
                },
                {
    usersWatched: [
                        "62b053b3a2980300048998f7"
                    ],
    _id: "63a862628be5450043f42718",
    videotitle: "Lecture 25: Pointers in C++ || Part-1 || DSA Placement Course - Love Babbar",
    videoUrl: "https://www.youtube.com/watch?v=YHwEIfrXZgE"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42719",
    videotitle: "Lecture 26: Pointers in C++ || Part-2 || DSA Placement Course - Love Babbar",
    videoUrl: "https://www.youtube.com/watch?v=rlpw7oi-bpE"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4271a",
    videotitle: "Lecture27: Double Pointers in C++ || Pointers Practice MCQs",
    videoUrl: "https://www.youtube.com/watch?v=P0UsAxtXq2Y"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4271b",
    videotitle: "Lecture28: Reference Variable | Static vs Dynamic Memory | Part-1",
    videoUrl: "https://www.youtube.com/watch?v=MMO2c57XHzM"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4271c",
    videotitle: "Lecture29: Dynamic Memory Allocation of 2D Arrays",
    videoUrl: "https://www.youtube.com/watch?v=LlqgWQgm58g"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4271d",
    videotitle: "Lecture30: Macros, Global Variables, Inline Functions & Default Args",
    videoUrl: "https://www.youtube.com/watch?v=0TEvaAiqo8Y"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4271e",
    videotitle: "Lecture 31: Learning Recursion the Best Way! | 10 Day Recursion Challenge",
    videoUrl: "https://www.youtube.com/watch?v=_-2u4EPHD88"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4271f",
    videotitle: "Lecture32: Understanding Recursion the easiest way || Day-2 || 10 Day Recursion Challenge",
    videoUrl: "https://www.youtube.com/watch?v=zg8Y1oE4qYQ"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42720",
    videotitle: "Lecture33: Recursion and Binary Search | Day-3 | 10 Days Recursion Challenge",
    videoUrl: "https://www.youtube.com/watch?v=UntSI7G5h20"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42721",
    videotitle: "Lecture34: Recursion with Strings | Day-4 | 10 Day Recursion Challenge",
    videoUrl: "https://www.youtube.com/watch?v=WyY2Af3k1xI"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42722",
    videotitle: "Lecture35: Merge Sort using Recursion | Day-5 | 10 Day Recursion Challenge",
    videoUrl: "https://www.youtube.com/watch?v=cdHEpbBVjRM"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42723",
    videotitle: "CodeHelp Weekly Contest 3 is LIVE || Contest 1 & 2 Gifts Sent !!",
    videoUrl: "https://www.youtube.com/watch?v=pUd_ubxlwIM"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42724",
    videotitle: "Lecture36: Quick Sort using Recursion | Day-6 | 10 Day Recursion Challenge",
    videoUrl: "https://www.youtube.com/watch?v=sNaHN4tZmRk"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42725",
    videotitle: "Lecture37: Recursion - Subsets / Subsequences of String [Theory + Code]",
    videoUrl: "https://www.youtube.com/watch?v=V0IgCltYgg4"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42726",
    videotitle: "Lecture38: Phone Keypad Problem Recursion || C++ Placement Course",
    videoUrl: "https://www.youtube.com/watch?v=tWnHbSHwNmA"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42727",
    videotitle: "Lecture39: Permutations of a String || C++ Placement Course",
    videoUrl: "https://www.youtube.com/watch?v=va3NEycUxsg"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42728",
    videotitle: "Lecture40: Rat in a Maze Problem || C++ Placement Course 2022",
    videoUrl: "https://www.youtube.com/watch?v=GqtyVD-x_jY"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42729",
    videotitle: "Lecture 41: Time & Space Complexity of Recursive Algorithms || C++ Placement Course",
    videoUrl: "https://www.youtube.com/watch?v=BYCeh76OASc"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4272a",
    videotitle: "Lecture 42: OOPs Concepts in C++ || Part-1",
    videoUrl: "https://www.youtube.com/watch?v=i_5pvt7ag7E"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4272b",
    videotitle: "Lecture 43 : 4 Pillars of OOPs Concept -Inheritance, Polymorphism, Encapsulation & Abstraction",
    videoUrl: "https://www.youtube.com/watch?v=b3GccK5_KSQ"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4272c",
    videotitle: "Lecture 44: Linked List & its types - Singly, Doubly, Circular etc.",
    videoUrl: "https://www.youtube.com/watch?v=q8gdBn9RPeI"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4272d",
    videotitle: "Lecture 45: Linked List Questions: Reverse LL and find Middle of LL",
    videoUrl: "https://www.youtube.com/watch?v=vqS1nVQdCJM"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4272e",
    videotitle: "CodeHelp Weekly Contest 4 is LIVE || Contest Editorial/Solutions",
    videoUrl: "https://www.youtube.com/watch?v=JFtQP4itvqo"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4272f",
    videotitle: "Lecture 46: Linked List Questions: Reverse LL in "K group" && Check LL is Circular or not",
    videoUrl: "https://www.youtube.com/watch?v=fi2vh0nQLi0"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42730",
    videotitle: "Lecture47: Detect & Remove Loop in Linked List [Approach Discussion + Optimised Implementation]",
    videoUrl: "https://www.youtube.com/watch?v=VxOFflTXlXo"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42731",
    videotitle: "Lecture 48: Remove Duplicates from a Sorted/UnSorted Linked List",
    videoUrl: "https://www.youtube.com/watch?v=7pgs-wT5d4c"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42732",
    videotitle: "Lecture 49: Merge 2 Sorted Linked Lists || Sort 0s, 1s and 2s in Linked List",
    videoUrl: "https://www.youtube.com/watch?v=ogmBt6f9hw8"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42733",
    videotitle: "Lecture 50: Check Palindrome in Linked List || C++ Placement Course",
    videoUrl: "https://www.youtube.com/watch?v=aD7mBVnKFEU"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42734",
    videotitle: "Lecture 51: Add 2 Numbers represented by Linked Lists || C++ Placement Course",
    videoUrl: "https://www.youtube.com/watch?v=HiRlTPf9aCg"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42735",
    videotitle: "Lecture 52: Clone a Linked List with Random Pointers || C++ Placement Course",
    videoUrl: "https://www.youtube.com/watch?v=83mPr0i56Gg"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42736",
    videotitle: "Lecture 53: Merge Sort in Linked List [ Theory + Implementation ]",
    videoUrl: "https://www.youtube.com/watch?v=rM5EEA_rbNY"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42737",
    videotitle: "Lecture 54: Introduction to Stacks [Theory + Implementation] || C++ Placement Course",
    videoUrl: "https://www.youtube.com/watch?v=_6COl6V6mng"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42738",
    videotitle: "Lecture 55: Stack Interview Questions || Placement Series by Love Babbar",
    videoUrl: "https://www.youtube.com/watch?v=BmZnJehDzyU"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42739",
    videotitle: "Lecture 56: Largest Rectangular Area in Histogram [Optimised Approach]",
    videoUrl: "https://www.youtube.com/watch?v=lJLcqDsmYfg"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4273a",
    videotitle: "Lecture 57: Stack - Celebrity Problem && Max Rectangle in Binary Matrix with all 1's",
    videoUrl: "https://www.youtube.com/watch?v=9u2BJfmWNEg"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4273b",
    videotitle: "Lecture 58: "N" Stacks in an Array || Stack Hard Question",
    videoUrl: "https://www.youtube.com/watch?v=lrSXKLmnMV8"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4273c",
    videotitle: "Lecture 59: Design Special Stack Problem || C++ Placement Course",
    videoUrl: "https://www.youtube.com/watch?v=OpwYmEBcPh0"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4273d",
    videotitle: "Lecture 60: Queues in C++ [STL + Implementation + Types of Queues ]",
    videoUrl: "https://www.youtube.com/watch?v=W7uB9-TKfTg"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4273e",
    videotitle: "Lecture 61: Queue FAANG Interview Questions || Placement Series by Love Babbar",
    videoUrl: "https://www.youtube.com/watch?v=_gJ3to4RyeQ"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4273f",
    videotitle: "Lecture 62: Binary Trees & its Representation || Different types of Traversals",
    videoUrl: "https://www.youtube.com/watch?v=5NiXlPrLslg"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42740",
    videotitle: "CodeHelp Weekly Contest 5 is LIVE || Contest Editorial/Solutions",
    videoUrl: "https://www.youtube.com/watch?v=f5BkKDTXABg"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42741",
    videotitle: "Lecture 63: Binary Tree FAANG Interview Questions || Part-1",
    videoUrl: "https://www.youtube.com/watch?v=nHMQ33LZ6oA"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42742",
    videotitle: "Lecture 64: Binary Tree FAANG Interview Questions || Part-2",
    videoUrl: "https://www.youtube.com/watch?v=s1d8UGDCCN8"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42743",
    videotitle: "Lecture 65: Binary Tree FAANG Interview Questions || Part-3",
    videoUrl: "https://www.youtube.com/watch?v=QG0hE0R_ng4"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42744",
    videotitle: "Lecture 66: Construct a Binary Tree from InOrder/PreOrder/PostOrder Traversal",
    videoUrl: "https://www.youtube.com/watch?v=ffE1xj51EBQ"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42745",
    videotitle: "Lecture 67: Minimum Time to BURN the Entire Binary Tree || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=XLdpy0_6MR4"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42746",
    videotitle: "Lecture 68: Morris Traversal || Flatten a Binary tree to Linked List || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=2BdY9fixMrM"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42747",
    videotitle: "Lecture 69: Binary Search Tree & its Implementation || Insertion, Deletion & Searching a Node",
    videoUrl: "https://www.youtube.com/watch?v=UeRUKRJvPa4"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42748",
    videotitle: "Lecture 70: Binary SearchTree FAANG Interview Questions || Part-1",
    videoUrl: "https://www.youtube.com/watch?v=pDURIj98e0I"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42749",
    videotitle: "Lecture 71: Binary SearchTree FAANG Interview Questions || Part-2",
    videoUrl: "https://www.youtube.com/watch?v=IGHyX15fLI8"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4274a",
    videotitle: "Lecture 72: Merge 2 Binary Search Trees || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=18w8VduomfI"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4274b",
    videotitle: "Lecture 73: Largest BST in a Binary Tree || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=fqx8z3VepMA"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4274c",
    videotitle: "Lecture 74: Heaps in C++ || Heap Sort || Insertion/Deletion in Heap || Priority Queue STL",
    videoUrl: "https://www.youtube.com/watch?v=NKJnHewiGdc"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4274d",
    videotitle: "Lecture 75: Heaps in C++ || Interview Questions || Part - 1",
    videoUrl: "https://www.youtube.com/watch?v=_9F2VgZcvdw"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4274e",
    videotitle: "CodeHelp Weekly Contest 6 is LIVE || MacBook Giveaway Coming Soon",
    videoUrl: "https://www.youtube.com/watch?v=m6olKeiItrI"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4274f",
    videotitle: "Lecture 76: Heaps in C++ || Interview Questions || Part - 2",
    videoUrl: "https://www.youtube.com/watch?v=eccAKrmffh8"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42750",
    videotitle: "Lecture 77: Heaps Hard Interview Questions || Part - 3",
    videoUrl: "https://www.youtube.com/watch?v=RrxpTWqj97A"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42751",
    videotitle: "Lecture 78: Hashmaps in C++ || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=7mUKGHznpfg"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42752",
    videotitle: "CodeHelp Weekly Contest 7 is LIVE",
    videoUrl: "https://www.youtube.com/watch?v=IFv1anmkOi0"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42753",
    videotitle: "Lecture 79: Trie & its Implementation || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=Y6dOuGjwsxU"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42754",
    videotitle: "Lecture 80: Longest Common Prefix Problem || Tries || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=VTr3Nh7BadI"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42755",
    videotitle: "Lecture 81: Implement a Phone Directory Using Trie || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=SK2S5lQegVg"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42756",
    videotitle: "Lecture 82: Rat in Maze Problem || Backtracking Day 1 || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=wjqSZy4pMT4"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42757",
    videotitle: "Lecture 83: N-Queen Problem || Backtracking Day 2 || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=9wEwqNdOAVQ"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42758",
    videotitle: "Lecture 84: Sudoku Solver Problem || Backtracking Day 3 || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=8lWxaRviJBA"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42759",
    videotitle: "Lecture 85: Introduction to Graphs || Creation and Implementation",
    videoUrl: "https://www.youtube.com/watch?v=EaK6aslcC5g"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4275a",
    videotitle: "Lecture 86: BFS Traversal in Graph || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=b5kij1Akf9I"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4275b",
    videotitle: "Lecture 87: DFS Traversal in Graph || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=aJa3U-hydXc"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4275c",
    videotitle: "Lecture 88: Cycle Detection in Undirected Graphs || Using BFS and DFS",
    videoUrl: "https://www.youtube.com/watch?v=1cSzxlhxOw8"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4275d",
    videotitle: "Lecture 89: Cycle Detection in Directed Graphs || Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=Tl5qbEmEQyY"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4275e",
    videotitle: "Lecture 90: Topological Sort ( Using DFS ) || Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=T_boOrr0rvk"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f4275f",
    videotitle: "Lecture 91: Topological Sort ( Using Kahn's Algorithm )  || Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=6XmzL04mlgQ"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42760",
    videotitle: "CodeHelp Weekly Contest 9 is LIVE || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=-q6VwO3QH74"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42761",
    videotitle: "Lecture 92: Cycle Detection in Directed Graph || Using BFS",
    videoUrl: "https://www.youtube.com/watch?v=X2_tYUuthH8"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42762",
    videotitle: "Lecture 93: Shortest Path in Undirected Graphs || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=abIEXKFpLNE"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42763",
    videotitle: "Lecture 94: Shortest Path in Directed Acyclic Graphs || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=P_bfy0LOU5g"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42764",
    videotitle: "Lecture 95: Dijkstra's Algorithm || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=dVUR3Rm6biE"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42765",
    videotitle: "Lecture 96: Minimum Spanning Tree || Prim's Algorithm",
    videoUrl: "https://www.youtube.com/watch?v=rnYBi9N_vw4"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42766",
    videotitle: "Lecture 97: Kruskal's Algorithm || Disjoint Set || Union by Rank & Path Compression",
    videoUrl: "https://www.youtube.com/watch?v=KxLtIrCyXwE"
                },
                {
    usersWatched: [],
    _id: "63a862628be5450043f42767",
    videotitle: "Lecture 98: Bridges in a Graph || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=CiDPT1xMKI0"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42768",
    videotitle: "Lecture 99: Articulation Points in Graphs || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=fqkqx6OBRDE"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42769",
    videotitle: "Lecture 100: Kosaraju's Algorithm for Strongly Connected Components || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=ndfjV_yHpgQ"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4276a",
    videotitle: "Lecture 101: Bellman Ford Algorithm || C++ Placement Series",
    videoUrl: "https://www.youtube.com/watch?v=ijpVpsmpJtQ"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4276b",
    videotitle: "Lecture 102: Introduction to Dynamic Programming | Memoization | Tabulation | Space Optimisation",
    videoUrl: "https://www.youtube.com/watch?v=PGsgv6nXhLw"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4276c",
    videotitle: "Lecture 103: Minimum Cost Climbing Stairs || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=S31W3kohFDk"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4276d",
    videotitle: "Lecture 104: Minimum Number of Coins || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=A3FHNCAkhxE"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4276e",
    videotitle: "Lecture 105: Maximum Sum of Non-Adjacent Elements || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=m9-H6AUBLgY"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4276f",
    videotitle: "Lecture 106: House Robbery Problem || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=Fe2GeXEzWM0"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42770",
    videotitle: "Lecture 107: Cut Rod into Segments of X, Y, Z || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=MFAAZW2znv8"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42771",
    videotitle: "Lecture 108: Count derangements  || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=NW-BLDQHFXk"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42772",
    videotitle: "Lecture 109: Painting Fence Algorithm || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=5eFh5CC-8KY"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42773",
    videotitle: "Lecture 110: 0/1 KnapSack Problem || learn 2-D DP Concept || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=xdPv2SZJLVI"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42774",
    videotitle: "Lecture 111: Combination Sum IV Problem || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=Wct0mN2SCRQ"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42775",
    videotitle: "Lecture 112: Perfect Squares Problem || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=aJTCcyPrPOA"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42776",
    videotitle: "Lecture 113: Minimum Cost for Tickets || Part-1 || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=oZ_xAIGCXw4"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42777",
    videotitle: "Lecture 114: Minimum Cost for Tickets || Part-2 || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=U5f__4we_Jc"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42778",
    videotitle: "Lecture 115: Largest Square area in Matrix || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=MMr19RE7KYY"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42779",
    videotitle: "Lecture 116: Min Score Triangulation of Polygon || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=Eo4G_LPCgX8"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4277a",
    videotitle: "Lecture 117: Minimum Sideways Jump LeetCode || 2D-DP || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=dvTTtzamEEo"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4277b",
    videotitle: "Lecture 118: Reducing Dishes LeetCode || 2D-DP || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=_iGlRDLPLxM"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4277c",
    videotitle: "Lecture 119: Longest Increasing Subsequence + Russian Doll LeetCode || DP + Binary Search",
    videoUrl: "https://www.youtube.com/watch?v=MYHajVcnXSA"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4277d",
    videotitle: "Lecture 120: Maximum Height by Stacking Cuboid || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=Ntzuz7XsdCI"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4277e",
    videotitle: "Lecture 121: Pizza with 3n Slices || 2D - DP || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=QZ9edJ0JCPw"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4277f",
    videotitle: "Lecture 122: Number of Dice Rolls with Target Sum || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=XY297u8qRDI"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42780",
    videotitle: "Lecture 123: Partition Equal Subset Sum || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=UGY7FMHt-M8"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42781",
    videotitle: "Lecture 124: Minimum Swaps to make Subsequences Increasing || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=IeT9Qz_vqHo"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42782",
    videotitle: "Lecture 125: Longest Arithmetic Subsequence || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=YaMcX7sem70"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42783",
    videotitle: "Lecture 126: Longest AP with given Difference "d" || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=IOOFHFXenQU"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42784",
    videotitle: "Lecture 127: Unique Binary Search Trees || Catalan Number",
    videoUrl: "https://www.youtube.com/watch?v=ox7fOk3HjlA"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42785",
    videotitle: "Lecture 128: Guess Number Higher or Lower || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=x--bMzT1Xhk"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42786",
    videotitle: "Lecture 129: Minimum Cost Tree From Leaf Values || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=LDiD9fr28tc"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42787",
    videotitle: "Lecture 130: Buy and Sell Stock [Part 1] || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=BSRTUtvJSIk"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42788",
    videotitle: "Lecture 131: Buy and Sell Stock [Part 2] || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=dlKGCNVel6A"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42789",
    videotitle: "Lecture 132: Buy and Sell Stock [Part 3] || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=NW7XRzg3smo"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4278a",
    videotitle: "Lecture 133: Buy and Sell Stock [Part 4] || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=tuhjovVtDII"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4278b",
    videotitle: "Lecture 134: Buy and Sell Stock [Part 5] || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=KFqhgQeQAXc"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4278c",
    videotitle: "Lecture 135: Longest Common Subsequence || DP on Strings",
    videoUrl: "https://www.youtube.com/watch?v=y1b8pObvndA"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4278d",
    videotitle: "Lecture 136: Longest Palindromic Subsequence || DP on Strings",
    videoUrl: "https://www.youtube.com/watch?v=U095bJJtW3w"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4278e",
    videotitle: "Lecture 137: EDIT Distance || DP on Strings",
    videoUrl: "https://www.youtube.com/watch?v=8HEjwf28LyE"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f4278f",
    videotitle: "Lecture 138: Maximum Rectangle with all 1's || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=IPT6emqnxg8"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42790",
    videotitle: "Lecture 139: Wildcard Pattern Matching || DP Series",
    videoUrl: "https://www.youtube.com/watch?v=OgovJ9CB0hI"
                },
                {
    usersWatched: [],
    _id: "63a862638be5450043f42791",
    videotitle: "Lecture 140: GREEDY ALGORITHMS in 1 VIDEO",
    videoUrl: "https://www.youtube.com/watch?v=HZOUwKCKF5o"
                }
            ],
    ongoingInformation: [
                {
    _id: "63b69405371819004109cad5",
    userid: "62b053b3a2980300048998f7",
    progress: "1.342281879194631",
    username: "Shubham Maurya",
    email: "null"
                }
            ],
    createdAt: "2022-12-25T14:47:07.179Z",
    updatedAt: "2024-07-02T21:25:33.176Z",
    __v: 14
        }
    ]
}
